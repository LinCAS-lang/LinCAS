module Test {
    class Suite inherits Array{
        let init()    { @cases := []   }
        let add(elem) { @cases << elem }
        let cases()   { @cases         }
    }

    class ClassSuite inherits Hash {
        alias(:"[]",:access)

        let [](klass) {
            if !keys().include?(klass) { 
                suite := new Suite()
                self[klass] := suite 
                return suite
            }
            return access(klass)
        }
    }

    const Classes := new ClassSuite()

    let self.describe(object,&block) {
        Descs << new TestCase::Description(object,block)
    }

    [
        "./test/assert.lc",
        "./test/testcase.lc",
        "./test/context.lc",
        "./test/runner.lc"
    ].each() { (file)
        require_relative(file)
    }

    at_exit() { 
        Runner.add_suite(Classes)
        exit(Runner.run()) 
    }

}